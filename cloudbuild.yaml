# Decrypt the file containing the key
steps:
- name: 'gcr.io/cloud-builders/gcloud'
  args:
  - kms
  - decrypt
  - --ciphertext-file=./id_rsa.enc
  - --plaintext-file=/root/.ssh/id_rsa
  - --location=global
  - --keyring=my-keyring
  - --key=github-key
  volumes:
  - name: 'ssh'
    path: /root/.ssh

# Set up git with key and domain.
- name: 'gcr.io/cloud-builders/git'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    chmod 600 /root/.ssh/id_rsa
    cat <<EOF >/root/.ssh/config
    Hostname github.com
    IdentityFile /root/.ssh/id_rsa
    EOF
    mv known_hosts /root/.ssh/known_hosts
  volumes:
  - name: 'ssh'
    path: /root/.ssh
# Use git clone develop branch.
- name: 'gcr.io/cloud-builders/git'
  args:
  - 'clone'
  - git@github.com:cloud4us/cloudbuild.git
  volumes:
  - name: 'ssh'
    path: /root/.ssh
  - name: 'cloud4us'
    path: /root/cloud4us
# Build a docker file and jar
- name: 'gcr.io/cloud-builders/gradle'
  entrypoint: 'bash'
  args:
  - '-c' # pass what follows as a command to bash
  - |
    cd springweb
    chmod +x ./gradlew
    ./gradlew docker
  volumes:
  - name: 'springweb'
    path: /root/springweb
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '--tag=gcr.io/$PROJECT_ID/springweb', 'cloudbuild/springweb/docker']
  volumes:
  - name: 'springweb'
    path: /root/springweb
images: ['gcr.io/$PROJECT_ID/springweb']


